# properties for bean configuration used by Spring through nl.knaw.dans.easy.web.bean.EasyPropertyPlaceholderConfigurer
# 
# this file contains properties for the new virtual machine, evm.
# change the name of this file to your {username} on the host machine.
#
# edit ~/.m2/maven-filter-values.properties, property 'evm.host.address' to reflect
# the address of the virtual machine in use.
#
# execute mvn generate-resources for the changes to take effect.
# 
# properties distinctive to the new virtual machine are annotated with 'evm'.

# normal and ssl port
evm.host.address=172.16.14.141

# should be identical to web-xml value
sword.servlet.name = sword

# for service document and deposit response
sword.providerURL = http://localhost:8083/
easy.sword.server.easy.home=http://localhost:8083/ui/

# deposit response
easy.sword.server.dataset.path=http://localhost:8081/ui/datasets/id/

# for service document (No HTML for the titles. On production: move the first phrase of the treatment to the policy?)
easy.sword.server.workspace.title=DANS sword interface
easy.sword.server.collection.title=EASY
easy.sword.server.collection.abstract=Electronic Archive System, accepts deposits by users registered on <a href="{0}">EASY</a>
easy.sword.server.collection.policy=<strong>THIS IS A TEST SERVER!</strong> No guarantee of service, or that deposits will be retained for any length of time.
easy.sword.server.collection.treatment=DANS will store deposited data according to the guidelines of the international <a href="http://www.datasealofapproval.org/">Data Seal of Approval</a>. After several workdays the data will be available to other researchers, in accordance with the conditions indicated by you and DANS. At the DANS website you'll find more information on <a href="http://www.dans.knaw.nl/en/content/data-archive/depositing-data">depositing data</a>.

# for deposit response (Do not change for production. Treatment place holders: EasyUser.get*, Dataset.get*)
easy.sword.server.deposit.treatment=A confirmation of the deposit has been sent to ~EasyUser.getEmail~ . DANS will store deposited data according to the guidelines of the international <a href="http://www.datasealofapproval.org/">Data Seal of Approval</a>. After several workdays the data will be available to other researchers, in accordance with the conditions indicated by you and DANS. At the DANS website you'll find more information on <a href="http://www.dans.knaw.nl/en/content/data-archive/depositing-data">depositing data</a>.

easy.sword.server.unzip.dir=target/tmp/

easy.web.server.port.http=80
easy.web.server.port.https=443

# OpenLDAP server
ldap.providerURL=ldap://${evm.host.address}:389
# evm securityPrincipal
ldap.securityPrincipal=cn=ldapadmin,dc=dans,dc=knaw,dc=nl
# evm securityCredentials
ldap.securityCredentials=dev
ldap.context.users=ou=users,ou=easy,dc=dans,dc=knaw,dc=nl
ldap.context.groups=ou=groups,ou=easy,dc=dans,dc=knaw,dc=nl
ldap.context.migration=ou=migration,ou=easy,dc=dans,dc=knaw,dc=nl
ldap.context.federation=ou=federation,ou=easy,dc=dans,dc=knaw,dc=nl

# Federation
easy.federationLogin.enabled=true
easy.federationLogin.federationUrl=https://eof12.dans.knaw.nl/Shibboleth.sso/Login
easy.federationLogin.propertyMapping.userId=Shib-uid
easy.federationLogin.propertyMapping.email=Shib-email
easy.federationLogin.propertyMapping.firstName=Shib-givenName
easy.federationLogin.propertyMapping.surname=Shib-surName
easy.federationLogin.propertyMapping.organization=Shib-HomeOrg

# Fedora Resource Index
fedora.ri.url=http://${evm.host.address}:8080/fedora/risearch

# Fedora server
easy.store.name=easy_local
fedora.base.url=http://${evm.host.address}:8080/fedora
fedora.admin.username=fedoraAdmin
fedora.admin.userpass=fedoraAdmin

# Easy database
# evm username
fedora.db.username=easy
# evm password
fedora.db.password=easypass
# evm connectionUrl
fedora.db.connectionUrl=jdbc:postgresql://${evm.host.address}:5432/easydb
fedora.db.hbnDriverClass=org.postgresql.Driver
fedora.db.hbnDialect=org.hibernate.dialect.PostgreSQLDialect

# persistent identifier database
# evm username
pid.generator.username=pid
# evm password
pid.generator.password=pidpass
pid.generator.connectionUrl=jdbc:postgresql://${evm.host.address}/pid_generator
pid.generator.driver=org.postgresql.Driver

# Solr
solr.url=http://${evm.host.address}:8080/solr

# Audit
business.audit.enabled=false
business.audit.file=audit-log/audit
sword.audit.file=audit-log/audit-sword

# Mail
mail.smtp.host=mailrelay.knaw.nl
#mail.smtp.host=smtp.telfort.nl
mail.fromAddress=info@dans.knaw.nl

admin.mailer.sendOnStarting=false
admin.mailer.sendOnClosing=false
admin.mailer.addresses=foo.bar@dans.knaw.nl,another.one@foo.bar.com

# data 
data.downloadLimit=1000
file.downloadLimit=100

easy.editable.content.root=${EASY_WEBUI_HOME_DEFAULT}/res/example/editable
