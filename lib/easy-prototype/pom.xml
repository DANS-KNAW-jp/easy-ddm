<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>nl.knaw.dans.shared</groupId>
		<artifactId>dans-prototype</artifactId>
		<version>1.10</version>
	</parent>
	<groupId>nl.knaw.dans.easy</groupId>
	<artifactId>easy-prototype</artifactId>
	<name>EASY Prototype</name>
	<version>2.9-SNAPSHOT</version>
	<packaging>pom</packaging>
	<properties>
 		<easy.version>2.10-beta-2</easy.version>
		<aspectj.version>1.7.2</aspectj.version>
		<servlet-api.version>2.5</servlet-api.version>
		<json.version>20080701</json.version>
		<commons-collections.version>3.2.1</commons-collections.version>
		<commons-email.version>1.3.1</commons-email.version>
		<janino.version>2.6.1</janino.version>
		<jetty.version>6.1H.22</jetty.version>
		<wicket.version>1.4.22</wicket.version>
		<jibx.version>1.2.4.5</jibx.version>
        <jersey.version>1.17.1</jersey.version>
	</properties>
	<dependencies>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-api-easymock</artifactId>
		</dependency>
		<dependency>
			<groupId>org.powermock</groupId>
			<artifactId>powermock-module-junit4</artifactId>
		</dependency>
		<dependency>
			<groupId>org.easymock</groupId>
			<artifactId>easymock</artifactId>
		</dependency>
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
		</dependency>
		<dependency>
			<groupId>org.hamcrest</groupId>
			<artifactId>hamcrest-all</artifactId>
		</dependency>
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<!-- Only for test scope. For run-time scope configure this in end-node-projects -->
			<scope>test</scope>
		</dependency>
	</dependencies>
	<dependencyManagement>
		<dependencies>
			<dependency>
				<groupId>nl.knaw.dans.easy</groupId>
				<artifactId>dans-pid</artifactId>
				<version>${easy.version}</version>
			</dependency>
			<dependency>
				<groupId>nl.knaw.dans.easy</groupId>
				<artifactId>dans-solr</artifactId>
				<version>${easy.version}</version>
			</dependency>
			<dependency>
				<groupId>nl.knaw.dans.easy</groupId>
				<artifactId>dans-wicket</artifactId>
				<version>${easy.version}</version>
			</dependency>
			<dependency>
				<groupId>nl.knaw.dans.easy</groupId>
				<artifactId>ddm</artifactId>
				<version>${easy.version}</version>
			</dependency>
			<dependency>
				<groupId>nl.knaw.dans.easy</groupId>
				<artifactId>easy-business</artifactId>
				<version>${easy.version}</version>
			</dependency>
			<dependency>
				<groupId>nl.knaw.dans.easy</groupId>
				<artifactId>easy-business-mocking</artifactId>
				<version>${easy.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>nl.knaw.dans.easy</groupId>
				<artifactId>easy-fedora</artifactId>
				<version>${easy.version}</version>
			</dependency>
			<dependency>
				<groupId>nl.knaw.dans.easy</groupId>
				<artifactId>easy-ldap</artifactId>
				<version>${easy.version}</version>
			</dependency>
			<dependency>
				<groupId>nl.knaw.dans.easy</groupId>
				<artifactId>emd</artifactId>
				<version>${easy.version}</version>
			</dependency>
			<dependency>
				<groupId>nl.knaw.dans.easy</groupId>
				<artifactId>pakbon</artifactId>
				<version>${easy.version}</version>
			</dependency>
			<dependency>
				<groupId>nl.knaw.dans.easy</groupId>
				<artifactId>xml</artifactId>
				<version>${easy.version}</version>
			</dependency>
		
			<dependency>
				<groupId>nl.knaw.dans.easy</groupId>
				<artifactId>dans-fedora</artifactId>
				<version>${easy.version}</version>
			</dependency>
			<dependency>
				<groupId>nl.knaw.dans.easy</groupId>
				<artifactId>dans-jibx</artifactId>
				<version>${easy.version}</version>
			</dependency>
			<dependency>
				<groupId>nl.knaw.dans.easy</groupId>
				<artifactId>dans-lang</artifactId>
				<version>${easy.version}</version>
			</dependency>
			<dependency>
				<groupId>nl.knaw.dans.easy</groupId>
				<artifactId>dans-ldap</artifactId>
				<version>${easy.version}</version>
			</dependency>
			
			<dependency>
				<groupId>nl.knaw.dans.easy</groupId>
				<artifactId>dmo-collections</artifactId>
				<version>${easy.version}</version>
			</dependency>
			<dependency>
				<groupId>nl.knaw.dans.easy</groupId>
				<artifactId>idmo-collections</artifactId>
				<version>${easy.version}</version>
			</dependency>
			<dependency>
				<groupId>nl.knaw.dans.easy</groupId>
				<artifactId>isecurity</artifactId>
				<version>${easy.version}</version>
			</dependency>
			<dependency>
				<groupId>nl.knaw.dans.easy</groupId>
				<artifactId>istore</artifactId>
				<version>${easy.version}</version>
			</dependency>
			<dependency>
				<groupId>nl.knaw.dans.easy</groupId>
				<artifactId>store</artifactId>
				<version>${easy.version}</version>
			</dependency>
			<dependency>
				<groupId>org.aspectj</groupId>
				<artifactId>aspectjrt</artifactId>
				<version>${aspectj.version}</version>
			</dependency>
			<dependency>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>jetty</artifactId>
				<version>${jetty.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>jetty-util</artifactId>
				<version>${jetty.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>jetty-management</artifactId>
				<version>${jetty.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>jetty-plus</artifactId>
				<version>${jetty.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>jetty-annotations</artifactId>
				<version>${jetty.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>jetty-naming</artifactId>
				<version>${jetty.version}</version>
				<scope>test</scope>
			</dependency>
			<dependency>
				<groupId>javax.servlet</groupId>
				<artifactId>servlet-api</artifactId>
				<version>${servlet-api.version}</version>
				<scope>provided</scope>
			</dependency>
			<dependency>
				<groupId>org.json</groupId>
				<artifactId>json</artifactId>
				<version>${json.version}</version>
			</dependency>
			<dependency>
				<groupId>commons-collections</groupId>
				<artifactId>commons-collections</artifactId>
				<version>${commons-collections.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-email</artifactId>
				<version>${commons-email.version}</version>
			</dependency>
			<dependency>
				<groupId>org.codehaus.janino</groupId>
				<artifactId>janino</artifactId>
				<version>${janino.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.wicket</groupId>
				<artifactId>wicket-spring</artifactId>
				<version>${wicket.version}</version>
			</dependency>
			<dependency>
				<groupId>org.jibx</groupId>
				<artifactId>jibx-run</artifactId>
				<version>${jibx.version}</version>
			</dependency>
			<dependency>
				<groupId>org.jibx</groupId>
				<artifactId>jibx-extras</artifactId>
				<version>${jibx.version}</version>
			</dependency>
            <dependency>
                <groupId>com.sun.jersey</groupId>
                <artifactId>jersey-server</artifactId>
                <version>${jersey.version}</version>
            </dependency>
            <dependency>
                <groupId>com.sun.jersey.contribs</groupId>
                <artifactId>jersey-spring</artifactId>
                <version>${jersey.version}</version>
                <exclusions>
                    <exclusion>
                        <groupId>org.springframework</groupId>
                        <artifactId>spring</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.springframework</groupId>
                        <artifactId>spring-core</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.springframework</groupId>
                        <artifactId>spring-web</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.springframework</groupId>
                        <artifactId>spring-beans</artifactId>
                    </exclusion>
                    <exclusion>
                        <groupId>org.springframework</groupId>
                        <artifactId>spring-context</artifactId>
                    </exclusion>
                    <exclusion>
                        <artifactId>spring-aop</artifactId>
                        <groupId>org.springframework</groupId>
                    </exclusion>
                </exclusions>
            </dependency>
		</dependencies>
	</dependencyManagement>
	<build>
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-surefire-plugin</artifactId>
				<version>2.12.3</version>
				<configuration>
					<!-- Give the forked vm some space. With the default PermGen space we 
						run out of memory -->
					<argLine>-Xms512m -Xmx1024m -XX:MaxPermSize=512m</argLine>
					<excludes>
						<exclude>**/*OnlineTest.java</exclude>
					</excludes>
					<useFile>true</useFile>
					<systemProperties>
						<property>
							<name>net.sourceforge.cobertura.datafile</name>
							<value>${basedir}/target/cobertura/cobertura.ser</value>
						</property>
					</systemProperties>
				</configuration>
			</plugin>
		</plugins>
	</build>
	<repositories>
		<repository>
			<id>DANS Maven Repository</id>
			<url>http://maven-repo.dans.knaw.nl/repo</url>
		</repository>
		<repository>
			<id>springsource-repo</id>
			<name>SpringSource Repository</name>
			<url>http://repo.springsource.org/release</url>
		</repository>
	</repositories>
	<pluginRepositories>
		<pluginRepository>
			<id>maven-repo</id>
			<name>maven repo</name>
			<url>http://repo1.maven.org/maven2/</url>
		</pluginRepository>
		<pluginRepository>
			<id>apache.m2.incubator</id>
			<name>Apache M2 Incubator Repository</name>
			<url>http://people.apache.org/repo/m2-incubating-repository/</url>
		</pluginRepository>
		<pluginRepository>
			<id>apache-releases</id>
			<name>Apache Releases repository</name>
			<url>http://people.apache.org/repo/m2-ibiblio-rsync-repository</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
		<pluginRepository>
			<id>servicemix-m2-repo</id>
			<name>Servicemix Maven2 Repository</name>
			<url>http://svn.apache.org/repos/asf/incubator/servicemix/m2-repo</url>
		</pluginRepository>
		<pluginRepository>
			<id>apache-incubating</id>
			<name>Apache Incubating Repository</name>
			<url>http://people.apache.org/repo/m2-incubating-repository</url>
			<releases>
				<enabled>true</enabled>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
		</pluginRepository>
		<pluginRepository>
			<id>apache-snapshots</id>
			<name>Apache Snapshot repository</name>
			<url>http://people.apache.org/repo/m2-snapshot-repository</url>
			<releases>
				<enabled>false</enabled>
			</releases>
			<snapshots>
				<enabled>true</enabled>
			</snapshots>
		</pluginRepository>
		<pluginRepository>
			<id>appfuse</id>
			<url>http://static.appfuse.org/repository</url>
		</pluginRepository>
		<pluginRepository>
			<releases>
				<updatePolicy>never</updatePolicy>
			</releases>
			<snapshots>
				<enabled>false</enabled>
			</snapshots>
			<id>jibx.sf.net</id>
			<name>JiBX repository</name>
			<url>http://jibx.sf.net/maven2</url>
		</pluginRepository>
	</pluginRepositories>
</project>
