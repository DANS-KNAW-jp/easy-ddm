#
# EASY Web-UI configuration file
#
# Please, modify the configuration below to match your environment. At the very least,
# you will need to fill in the places starting with ### below. Notice the 
# additional comments about what values to fill in.
#
# If all supporting services are located on the same host (using default ports) fill in
# the hostname here (e.g. 'localhost' for the same host as easy-webui).  Otherwise change
# the instances of ${easy.host} below appropriately. 
easy.host=localhost

# OpenLDAP user database
ldap.providerURL=ldap://${easy.host}:389
ldap.securityPrincipal=cn=ldapadmin,dc=dans,dc=knaw,dc=nl
ldap.securityCredentials=###password:ldapadmin###
ldap.context.users=ou=users,ou=easy,dc=dans,dc=knaw,dc=nl
ldap.context.groups=ou=groups,ou=easy,dc=dans,dc=knaw,dc=nl
ldap.context.migration=ou=migration,ou=easy,dc=dans,dc=knaw,dc=nl
ldap.context.federation=ou=federation,ou=easy,dc=dans,dc=knaw,dc=nl

# Federation login support
easy.federationLogin.enabled=false
easy.federationLogin.debug.enabled=false
easy.federationLogin.debug.user.file=/tmp/feduser.properties
#
# The URL used to start a federated login procedure using Shibboleth
easy.federationLogin.federationUrl=###shibboleth-login-command###
#
# There is also an attribute Shib-Session-ID (with dashes instead of underscores)
# but we use Shib_eduPersonPN to check for a session, because we need that property
# anyway and if it is not present there might as well be no session at all.
easy.federationLogin.propertyMapping.shibSessionId=Shib_eduPersonPN
#
# globally unique ID for the federation account, used to map the federation account to an EASY account. This should
# normally be the standard REMOTE_USER CGI var.
easy.federationLogin.propertyMapping.remoteUser=Shib_eduPersonPN
easy.federationLogin.propertyMapping.email=Shib_email
easy.federationLogin.propertyMapping.firstName=Shib_givenName
easy.federationLogin.propertyMapping.surname=Shib_surName
easy.federationLogin.propertyMapping.organization=Shib_HomeOrg

# Fedora Resource Index
fedora.ri.url=http://${easy.host}:8080/fedora/risearch

# Fedora server
easy.store.name=easy_local
fedora.base.url=http://${easy.host}:8080/fedora
fedora.admin.username=easy_webui
fedora.admin.userpass=###password:easy_webui###

# Easy database
fedora.db.username=easy_webui
fedora.db.password=###password:easy_webui###
fedora.db.connectionUrl=jdbc:postgresql://${easy.host}:5432/easy_db
fedora.db.hbnDriverClass=org.postgresql.Driver
fedora.db.hbnDialect=org.hibernate.dialect.PostgreSQLDialect

# Persistent Identifier database
pid.generator.username=easy_webui
pid.generator.password=###password:easy_webui###
pid.generator.connectionUrl=jdbc:postgresql://${easy.host}/pid_db
pid.generator.driver=org.postgresql.Driver

# SORL search index
solr.url=http://${easy.host}:8080/solr

# Audit
business.audit.enabled=false
business.audit.file=/var/log/easy-webui/audit-log/audit

# Host running the SMTP service
mail.smtp.host=${easy.host}
#
# The e-mail address to show as sender in automatic E-mails
mail.fromAddress=###mail.fromAddress###
#
# Comma-separated list of e-mail addresses to send a copy of all notification 
# mails to users.  This can be used to debug problems with automatic mails.
# Leave blank if no BCC-mails are required
mail.bccs=###mail.bccs###

# When to send admin mails
admin.mailer.sendOnStarting=false
admin.mailer.sendOnClosing=false
#
# Comma-separated list of e-mail addresses to send admin mails to 
admin.mailer.addresses=###admin.mailer.addressess###

# Limits in MB and number of files to download 
data.downloadLimit=1000
file.downloadLimit=400

# prefix for audio-video.springfield-path 
# in ingested properties files with audio-video.ebiu-instructions=yes
streaming.host=###springfield server###

# Location of the content that is editable through the Web UI. It is HIGHLY RECOMMENDED
# that you copy the example initial content in ${EASY_WEBUI_HOME}/res/example/editable to 
# a location outside the installation directory and modify below property to point to that
# direction.  Notice also that this new location mus be writeable by the Linux user running
# Tomcat.  
easy.editable.content.root=${EASY_WEBUI_HOME}/res/example/editable

#
# Location of the masterkey file containing the SHA-1 hash of the masterkey password.  
# If not specified or present, the masterkey is disabled.
#
easy.admin.masterkeyfile=${EASY_WEBUI_HOME}/res/masterkey

# Base URL of the deposit instruction files
easy.link-base.instructions=https://easy.dans.knaw.nl/doc

# URLs of footer links
easy.link.using-easy=http://www.dans.knaw.nl/en/content/data-archive
easy.link.contact=http://dans.knaw.nl/en/contact
easy.link.disclaimer=http://dans.knaw.nl/en/about/services/data-archiving-and-reuse/easy/disclaimer-easy
easy.link.legal=http://www.dans.knaw.nl/en/content/data-archive/legal-information
easy.link.property-right-statement=http://www.dans.knaw.nl/content/property-rights-statement-easy-website
easy.link.reusing-data=http://dans.knaw.nl/en/search/about-reusing-data
easy.link.dsa=https://assessment.datasealofapproval.org/assessment_101/seal/html/

# Credentials for the Archaeological Pakbon validation service
pakbon.validator.username=bergh
pakbon.validator.password=cC!XzlKK

# Location of the file that store the read-only status of EASY. This should point
# to a writable location, but it is not necessary for the file to exist; EASY will
# create it.
easy.business.system.status.file=/var/cache/tomcat6/temp/easy-readonly-status.txt
