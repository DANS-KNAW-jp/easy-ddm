<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/maven-v4_0_0.xsd">
	<parent>
		<artifactId>easy-build</artifactId>
		<groupId>nl.knaw.dans.easy</groupId>
		<version>2.x-SNAPSHOT</version>
		<relativePath>../../easy-build/pom.xml</relativePath>
	</parent>

	<modelVersion>4.0.0</modelVersion>
	<name>EASY Web-UI Application</name>
	<artifactId>easy-webui</artifactId>
	<packaging>war</packaging>
	<version>2.7-beta-4</version>
	<description>Easy Web Application</description>

	<licenses>
		<license>
			<name>The Apache Software License, Version 2.0</name>
			<url>http://www.apache.org/licenses/LICENSE-2.0.txt</url>
			<distribution>repo</distribution>
		</license>
	</licenses>

	<dependencies>
		<!-- Project dependencies -->
		<dependency>
			<groupId>nl.knaw.dans.easy</groupId>
			<artifactId>easy-business</artifactId>
			<version>${project.parent.version}</version>
		</dependency>

		<dependency>
			<groupId>nl.knaw.dans.common</groupId>
			<artifactId>dans-wicket</artifactId>
			<version>${project.parent.version}</version>
			<exclusions>
				<!-- Slf4j 1.5.0 is a dependency of wicket 1.4.12, but we need Slf4j 
					1.6.4 for solr -->
				<exclusion>
					<artifactId>slf4j-api</artifactId>
					<groupId>org.slf4j</groupId>
				</exclusion>
				<exclusion>
					<groupId>log4j</groupId>
					<artifactId>log4j</artifactId>
				</exclusion>
				<exclusion>
					<artifactId>servlet-api</artifactId>
					<groupId>javax.servlet</groupId>
				</exclusion>
			</exclusions>
		</dependency>

		<!-- This is an end-application, so it should declare a slf4j-binding -->
		<!-- Dependency on logback-classic binding for slf4j -->
		<!-- Configuration of logback can be done f.i. by logback.xml on the classpath -->
		<!-- -->
		<dependency>
			<groupId>ch.qos.logback</groupId>
			<artifactId>logback-classic</artifactId>
			<version>1.0.9</version>
			<!-- Normally the scope would be runtime, but we have compile-time dependencies 
				from code that loads the logback configuration. -->
			<scope>compile</scope>
		</dependency>
		<!-- -->

		<!-- Dependencies on Repositories and other Data Access Points -->
		<!-- REMINDER: these dependencies are only here so that Spring can instantiate 
			and inject these dependencies! -->
		<!-- There should never be a dependency on these projects from the code 
			body! -->
		<!-- TEST: comment out these dependencies and the project should still 
			compile. -->
		<!-- (It would be better if we could do this in a different way) -->
		<dependency>
			<groupId>nl.knaw.dans.easy</groupId>
			<artifactId>easy-ldap</artifactId>
			<version>${project.parent.version}</version>
		</dependency>

		<dependency>
			<groupId>nl.knaw.dans.easy</groupId>
			<artifactId>easy-fedora</artifactId>
			<version>${project.parent.version}</version>
		</dependency>

		<dependency>
			<groupId>nl.knaw.dans.common</groupId>
			<artifactId>dans-solr</artifactId>
			<version>${project.parent.version}</version>
		</dependency>

		<!-- End dependencies on Repositories and other Data Access Points -->

		<!-- End project dependencies -->

		<!-- WICKET DEPENDENCIES -->

		<!-- Spring dependencies <dependency> <groupId>aspectj</groupId> <artifactId>aspectjweaver</artifactId> 
			<version>1.5.4</version> </dependency> -->
		<!-- ASPECTJ -->
		<dependency>
			<groupId>org.aspectj</groupId>
			<artifactId>aspectjrt</artifactId>
			<version>1.6.11</version>
		</dependency>


		<!-- JETTY DEPENDENCIES FOR TESTING -->
		<dependency>
			<groupId>org.mortbay.jetty</groupId>
			<artifactId>jetty</artifactId>
			<version>${jetty.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mortbay.jetty</groupId>
			<artifactId>jetty-util</artifactId>
			<version>${jetty.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mortbay.jetty</groupId>
			<artifactId>jetty-management</artifactId>
			<version>${jetty.version}</version>
			<scope>test</scope>
		</dependency>

		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>servlet-api</artifactId>
			<version>2.5</version>
			<scope>provided</scope>
		</dependency>
		<dependency>
			<groupId>org.json</groupId>
			<artifactId>json</artifactId>
			<version>20080701</version>
		</dependency>
		<dependency>
			<groupId>commons-collections</groupId>
			<artifactId>commons-collections</artifactId>
			<version>3.2.1</version>
		</dependency>

		<dependency>
			<groupId>org.codehaus.janino</groupId>
			<artifactId>janino</artifactId>
			<version>2.6.1</version>
		</dependency>


		<dependency>
			<groupId>org.springframework</groupId>
			<artifactId>spring-web</artifactId>
			<version>3.2.2.RELEASE</version>
		</dependency>

		<dependency>
			<groupId>org.apache.wicket</groupId>
			<artifactId>wicket-spring</artifactId>
			<version>1.4.22</version>
		</dependency>
		<dependency>
			<groupId>org.slf4j</groupId>
			<artifactId>log4j-over-slf4j</artifactId>
			<version>1.7.2</version>
		</dependency>
	</dependencies>

	<build>
		<finalName>easy-webui</finalName>

		<resources>
			<resource>
				<filtering>true</filtering>
				<directory>src/main/resources</directory>
				<includes>
					<include>conf/app/**/*.*</include>
					<include>version.properties</include>
				</includes>
			</resource>
			<resource>
				<filtering>false</filtering>
				<directory>src/main/resources</directory>
				<includes>
					<include>conf/dataset/**/*.*</include>
					<include>conf/*.*</include>
					<include>logback.xml</include>
					<include>applicationContext.xml</include>
				</includes>
			</resource>
			<resource>
				<filtering>false</filtering>
				<directory>src/main/java</directory>
				<includes>
					<include>**/*.html</include>
					<include>**/*.properties</include>
					<include>**/*.xml</include>
					<include>**/*.pdf</include>
					<include>**/*.*</include>
				</includes>
				<excludes>
					<exclude>**/*.java</exclude>
				</excludes>
			</resource>
		</resources>
		<plugins>
			<plugin>
				<artifactId>maven-assembly-plugin</artifactId>
				<version>2.4</version>
				<configuration>
					<descriptors>
						<descriptor>src/main/assembly/bin.xml</descriptor>
					</descriptors>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id>
						<phase>package</phase>
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>

			<plugin>
				<groupId>org.mortbay.jetty</groupId>
				<artifactId>maven-jetty-plugin</artifactId>
				<version>${jetty.version}</version>
			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>aspectj-maven-plugin</artifactId>
				<version>1.4</version>
				<configuration>
					<verbose>true</verbose>
					<source>${source-code-version}</source>
					<target>${byte-code-version}</target>
				</configuration>
				<executions>
					<execution>
						<goals>
							<goal>compile</goal>
						</goals>
					</execution>
				</executions>

			</plugin>

			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<execution>
						<id>add-source</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>src/main/aspect</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>


		</plugins>
		<pluginManagement>
			<plugins>
				<!--This plugin's configuration is used to store Eclipse m2e settings 
					only. It has no influence on the Maven build itself. -->
				<plugin>
					<groupId>org.eclipse.m2e</groupId>
					<artifactId>lifecycle-mapping</artifactId>
					<version>1.0.0</version>
					<configuration>
						<lifecycleMappingMetadata>
							<pluginExecutions>
								<pluginExecution>
									<pluginExecutionFilter>
										<groupId>
											org.codehaus.mojo
										</groupId>
										<artifactId>
											aspectj-maven-plugin
										</artifactId>
										<versionRange>
											[1.4,)
										</versionRange>
										<goals>
											<goal>compile</goal>
											<goal>test-compile</goal>
										</goals>
									</pluginExecutionFilter>
									<action>
										<execute>
											<runOnIncremental>true</runOnIncremental>
										</execute>
									</action>
								</pluginExecution>
							</pluginExecutions>
						</lifecycleMappingMetadata>
					</configuration>
				</plugin>
			</plugins>
		</pluginManagement>
	</build>

	<properties>
		<!-- wicket.version>1.3.4</wicket.version -->
		<jetty.version>6.1.7</jetty.version>
	</properties>
</project>
